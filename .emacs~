;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; EDT's .emacs file
;;;;
;;;; I think this is my most extensive dotfile of all time, which is
;;;; saying a lot.  There was a time when I just plain wouldn't touch
;;;; emacs, and now (as a result of my lisp fixation) it's my favorite
;;;; editor.
;;;;
;;;; I still use a lot of vimlike keybindings, and a lot of plugins to
;;;; get it to "feel" right, though.  This is probably a horrible mess
;;;; to anyone who actually knows a thing or two about emacs.
;;;;
;;;; I don't think it's commonplace to license dotfiles, but I'm doing
;;;; it anyway.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Copyright (c) 2016, John Markiewicz <jmarkiewicz@airmail.cc>
;; All rights reserved.
;;
;; Redistribution and  use in  source and binary  forms, with  or without
;; modification, are permitted provided that the following conditions are
;; met:
;;
;; 1.  Redistributions of  source code  must retain  the above  copyright
;; notice, this list of conditions and the following disclaimer.
;;
;; 2. Redistributions in  binary form must reproduce  the above copyright
;; notice, this  list of conditions  and the following disclaimer  in the
;; documentation and/or other materials provided with the distribution.
;;
;; 3.  Neither the  name of  the copyright  holder nor  the names  of its
;; contributors may be  used to endorse or promote  products derived from
;; this software without specific prior written permission.
;;
;; THIS SOFTWARE  IS PROVIDED BY  THE COPYRIGHT HOLDERS  AND CONTRIBUTORS
;; "AS IS"  AND ANY EXPRESS  OR IMPLIED WARRANTIES, INCLUDING,  BUT NOT
;; LIMITED TO, THE IMPLIED WARRANTIES  OF MERCHANTABILITY AND FITNESS FOR
;; A PARTICULAR PURPOSE  ARE DISCLAIMED. IN NO EVENT  SHALL THE COPYRIGHT
;; HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
;; SPECIAL,  EXEMPLARY,  OR  CONSEQUENTIAL DAMAGES  (INCLUDING,  BUT  NOT
;; LIMITED TO, PROCUREMENT OF SUBSTITUTE  GOODS OR SERVICES; LOSS OF USE,
;; DATA, OR PROFITS; OR BUSINESS  INTERRUPTION) HOWEVER CAUSED AND ON ANY
;; THEORY OF  LIABILITY, WHETHER IN  CONTRACT, STRICT LIABILITY,  OR TORT
;; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN  ANY WAY OUT OF THE USE
;; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; All that said, enjoy this customization file.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; First, some stuff needed for emacs to work as emacs.
(require 'package)

(push '("marmalade" . "http://marmalade-repo.org/packages/")
      package-archives )

(push '("melpa" . "http://melpa.milkbox.net/packages/")
      package-archives)

(package-initialize)

;;; Basic customization stuff.


(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "tewi2a" :foundry "lucy" :slant normal :weight normal :height 83 :width normal)))))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   ["#151515" "#953331" "#546a29" "#909737" "#385e6b" "#7f355e" "#34676f" "#c6a57b"])
 '(custom-enabled-themes (quote (solarized-light)))
 '(custom-safe-themes
   (quote
    ("fe1682ca8f7a255cf295e76b0361438a21bb657d8846a05d9904872aa2fb86f2" "0371ea3962f89505580bb2f346f96decfd7c2147e0ee6811951b1239d2ebddcc" "d677ef584c6dfc0697901a44b885cc18e206f05114c8a3b7fde674fce6180879" "28e937e8f34aab3e4f3a2e119736521980a34b5a6f6ac198ee383270e7f2492d" default)))
 '(fci-rule-color "#151515")
 '(highlight-changes-colors (quote ("#d33682" "#6c71c4")))
 '(highlight-tail-colors
   (quote
    (("#eee8d5" . 0)
     ("#B4C342" . 20)
     ("#69CABF" . 30)
     ("#69B7F0" . 50)
     ("#DEB542" . 60)
     ("#F2804F" . 70)
     ("#F771AC" . 85)
     ("#eee8d5" . 100))))
 '(menu-bar-mode nil)
 '(org-agenda-files
   (directory-files
    (expand-file-name "~/org/")
    t "^\\([^.]\\|\\.[^.]\\|\\.\\..\\)"))
 '(tool-bar-mode nil)
 '(vc-annotate-background "#586e75")
 '(vc-annotate-color-map
   (quote
    ((20 . "#990A1B")
     (40 . "#FF6E64")
     (60 . "#cb4b16")
     (80 . "#7B6000")
     (100 . "#b58900")
     (120 . "#DEB542")
     (140 . "#546E00")
     (160 . "#859900")
     (180 . "#B4C342")
     (200 . "#3F4D91")
     (220 . "#6c71c4")
     (240 . "#9EA0E5")
     (260 . "#2aa198")
     (280 . "#69CABF")
     (300 . "#00629D")
     (320 . "#268bd2")
     (340 . "#69B7F0")
     (360 . "#d33682"))))
 '(vc-annotate-very-old-color "#93115C"))

;;; E-mail stuff.
;; Mutt and Emacs
(add-to-list 'auto-mode-alist '("/mutt" . mail-mode))

;; Mail-mode configuration
(add-to-list 'auto-mode-alist '("/mutt" . mail-mode))

;;; Stuff for lilypond editing (currently unused).
;; load lyqi
;;(require 'lyqi)
;; automatically use lyqi mode when editing .ly and .ily files
;;(add-to-list 'auto-mode-alist '("\\\\.ly$" . lyqi-mode))
;;(add-to-list 'auto-mode-alist '("\\\\.ily$" . lyqi-mode))

;;; Slime-mode stuff.
;;(require 'slime)
;;(slime-setup)

;;; SBCL stuff.
(load (expand-file-name "~/code/quicklisp/slime-helper.el"))
(setq inferior-lisp-program "/bin/sbcl")

;;; Get emacs to feel more like vim.  My vim, anyway.
(add-to-list 'load-path "~/.emacs.d/evil")
(require 'evil)
(evil-mode 1)

(define-key evil-normal-state-map (kbd "C-h") 'evil-window-left)
(define-key evil-normal-state-map (kbd "C-j") 'evil-window-down)
(define-key evil-normal-state-map (kbd "C-k") 'evil-window-up)
(define-key evil-normal-state-map (kbd "C-l") 'evil-window-right)

(global-linum-mode 1)

(defvar my-linum-format-string "%3d")

(add-hook 'linum-before-numbering-hook 'my-linum-get-format-string)

(defun my-linum-get-format-string ()
  (let* ((width (1+ (length (number-to-string
                             (count-lines (point-min) (point-max))))))
         (format (concat "%" (number-to-string width) "d")))
    (setq my-linum-format-string format)))

(defvar my-linum-current-line-number 0)

(setq linum-format 'my-linum-relative-line-numbers)

(defun my-linum-relative-line-numbers (line-number)
  (let ((offset (- line-number my-linum-current-line-number)))
    (propertize (format my-linum-format-string offset) 'face 'linum)))

(defadvice linum-update (around my-linum-update)
  (let ((my-linum-current-line-number (line-number-at-pos)))
    ad-do-it))
(ad-activate 'linum-update)

(scroll-bar-mode -1)
(menu-bar-mode -1)
(tool-bar-mode -1)

;;; TeX Stuff.
(add-hook 'LaTeX-mode-hook #'latex-extra-mode)
(setq TeX-PDF-mode t)
(add-hook 'tex-mode-hook
  (lambda ()
   (local-set-key (quote [f1]) (quote help-for-help))))

;(load "auctex.el" nil t t)
;(load "preview-latex.el" nil t t)

;; The original value is "\f\\|[      ]*$", so we add the bullets (-), (+), and (*).
;; There is no need for "^" as the regexp is matched at the beginning of line.
(setq paragraph-start "\f\\|[ \t]*$\\|[ \t]*[-+*] ")

;; My custom LaTeX class for Org-mode export. require is needed for it to work.
;(add-to-list 'org-export-latex-classes
;             '("myarticle"
;"\\documentclass[11pt]{article}
;
;\\usepackage{amsmath}
;\\newcommand\\foo{bar}
;               [NO-DEFAULT-PACKAGES]
;               [NO-PACKAGES]
;               [EXTRA]"
;               ("\\section{%s}" . "\\section*{%s}")
;           ("\\subsection{%s}" . "\\subsection*{%s}")
;           ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
;           ("\\paragraph{%s}" . "\\paragraph*{%s}")
;           ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))

;;; Haskell stuff, for the inevitability that is learning Haskell.
;;(add-hook 'haskell-mode-hook 'turn-on-haskell-doc-mode)
(add-hook 'haskell-mode-hook 'turn-on-haskell-indentation)
;;(add-hook 'haskell-mode-hook 'turn-on-haskell-indent)
;;(add-hook 'haskell-mode-hook 'turn-on-haskell-simple-indent)

;;; I, uh, forget what this line does, but it's probably important?
(require 'iso-transl)


;;; Personal keybindings and licensing stuff
(global-set-key (kbd "C-x C-;") 'comment-or-uncomment-region)

(setq bsd-3-clause-license
      "Copyright (c) 2016, John Markiewicz <jmarkiewicz@airmail.cc>
All rights reserved.

Redistribution and  use in  source and binary  forms, with  or without
modification, are permitted provided that the following conditions are
met:

1.  Redistributions of  source code  must retain  the above  copyright
notice, this list of conditions and the following disclaimer.

2. Redistributions in  binary form must reproduce  the above copyright
notice, this  list of conditions  and the following disclaimer  in the
documentation and/or other materials provided with the distribution.

3.  Neither the  name of  the copyright  holder nor  the names  of its
contributors may be  used to endorse or promote  products derived from
this software without specific prior written permission.

THIS SOFTWARE  IS PROVIDED BY  THE COPYRIGHT HOLDERS  AND CONTRIBUTORS
\"AS IS\"  AND ANY EXPRESS  OR IMPLIED WARRANTIES, INCLUDING,  BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES  OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE  ARE DISCLAIMED. IN NO EVENT  SHALL THE COPYRIGHT
HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL,  EXEMPLARY,  OR  CONSEQUENTIAL DAMAGES  (INCLUDING,  BUT  NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE  GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS  INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF  LIABILITY, WHETHER IN  CONTRACT, STRICT LIABILITY,  OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN  ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.")
(defun insert-bsd-3-clause-license ()
  "Inserts the BSD 3 clause license wherever the cursor is, neatly formatted."
  (interactive)
  (insert bsd-3-clause-license))
(global-set-key (kbd "C-x C-k C-l") 'insert-bsd-3-clause-license)

(setq apache-2-point-0-license
      "                                 Apache License
                           Version 2.0, January 2004
                        http://www.apache.org/licenses/

   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

   1. Definitions.

      \"License\"  shall  mean  the  terms  and  conditions  for  use,
      reproduction, and distribution as  defined by Sections 1 through
      9 of this document.

      \"Licensor\" shall mean the copyright owner or entity authorized
      by the copyright owner that is granting the License.

      \"Legal Entity\" shall  mean the union of the  acting entity and
      all other entities that control, are controlled by, or are under
      common  control with  that  entity.  For  the  purposes of  this
      definition, "control"  means (i) the power,  direct or indirect,
      to cause the direction or  management of such entity, whether by
      contract or otherwise, or (ii)  ownership of fifty percent (50%)
      or more of the outstanding shares, or (iii) beneficial ownership
      of such entity.

      \"You\" (or \"Your\")  shall mean an individual  or Legal Entity
      exercising permissions granted by this License.

      \"Source\"  form  shall  mean  the  preferred  form  for  making
      modifications,  including but  not  limited  to software  source
      code, documentation source, and configuration files.

      \"Object\" form  shall mean  any form resulting  from mechanical
      transformation or  translation of  a Source form,  including but
      not limited  to compiled  object code,  generated documentation,
      and conversions to other media types.

      \"Work\" shall mean the work of authorship, whether in Source or
      Object form, made available under the License, as indicated by a
      copyright notice that is included in or attached to the work (an
      example is provided in the Appendix below).

      \"Derivative Works\" shall  mean any work, whether  in Source or
      Object form, that is based on (or derived from) the Work and for
      which  the editorial  revisions,  annotations, elaborations,  or
      other modifications represent,  as a whole, an  original work of
      authorship. For  the purposes of this  License, Derivative Works
      shall not  include works that  remain separable from,  or merely
      link  (or bind  by  name) to  the interfaces  of,  the Work  and
      Derivative Works thereof.

      \"Contribution\" shall  mean any  work of  authorship, including
      the  original  version of  the  Work  and any  modifications  or
      additions  to that  Work or  Derivative Works  thereof, that  is
      intentionally submitted to Licensor for inclusion in the Work by
      the  copyright  owner  or  by  an  individual  or  Legal  Entity
      authorized to submit on behalf  of the copyright owner.  For the
      purposes  of this  definition, \"submitted\"  means any  form of
      electronic,  verbal,  or  written   communication  sent  to  the
      Licensor or  its representatives,  including but not  limited to
      communication on  electronic mailing lists, source  code control
      systems, and issue  tracking systems that are managed  by, or on
      behalf  of,  the Licensor  for  the  purpose of  discussing  and
      improving  the   Work,  but  excluding  communication   that  is
      conspicuously marked  or otherwise designated in  writing by the
      copyright owner as \"Not a Contribution.\"

      \"Contributor\" shall mean Licensor  and any individual or Legal
      Entity on  behalf of  whom a Contribution  has been  received by
      Licensor and subsequently incorporated within the Work.

   2. Grant of Copyright License.  Subject to the terms and conditions
      of  this  License,  each  Contributor hereby  grants  to  You  a
      perpetual,  worldwide,  non-exclusive, no-charge,  royalty-free,
      irrevocable copyright  license to reproduce,  prepare Derivative
      Works of,  publicly display,  publicly perform,  sublicense, and
      distribute  the Work  and  such Derivative  Works  in Source  or
      Object form.

   3. Grant of Patent License. Subject  to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide,  non-exclusive, no-charge,  royalty-free, irrevocable
      (except as stated in this  section) patent license to make, have
      made, use, offer  to sell, sell, import,  and otherwise transfer
      the Work, where such license applies only to those patent claims
      licensable by such Contributor that are necessarily infringed by
      their  Contribution(s)   alone  or   by  combination   of  their
      Contribution(s) with the Work  to which such Contribution(s) was
      submitted. If You institute patent litigation against any entity
      (including a cross-claim or  counterclaim in a lawsuit) alleging
      that the  Work or  a Contribution  incorporated within  the Work
      constitutes direct or contributory patent infringement, then any
      patent licenses granted to You  under this License for that Work
      shall terminate as of the date such litigation is filed.

   4. Redistribution. You  may reproduce and distribute  copies of the
      Work or Derivative Works thereof  in any medium, with or without
      modifications, and in  Source or Object form,  provided that You
      meet the following conditions:

      (a) You must give any other recipients of the Work or Derivative
          Works a copy of this License; and

      (b) You must cause any modified files to carry prominent notices
          stating that You changed the files; and

      (c) You must retain, in the  Source form of any Derivative Works
          that You  distribute, all copyright, patent,  trademark, and
          attribution  notices  from  the  Source form  of  the  Work,
          excluding those notices  that do not pertain to  any part of
          the Derivative Works; and

      (d) If the  Work includes a \"NOTICE\" text file  as part of its
          distribution, then any Derivative  Works that You distribute
          must  include a  readable  copy of  the attribution  notices
          contained within  such NOTICE file, excluding  those notices
          that do not pertain to any  part of the Derivative Works, in
          at least one  of the following places: within  a NOTICE text
          file distributed as part of the Derivative Works; within the
          Source  form or  documentation, if  provided along  with the
          Derivative  Works; or,  within  a display  generated by  the
          Derivative Works,  if and wherever such  third-party notices
          normally appear.   The contents of  the NOTICE file  are for
          informational purposes  only and do not  modify the License.
          You may  add Your own attribution  notices within Derivative
          Works that  You distribute, alongside  or as an  addendum to
          the NOTICE text from the Work, provided that such additional
          attribution  notices cannot  be construed  as modifying  the
          License.

      You may add  Your own copyright statement  to Your modifications
      and  may  provide  additional  or different  license  terms  and
      conditions  for  use,  reproduction,  or  distribution  of  Your
      modifications,  or for  any such  Derivative Works  as a  whole,
      provided Your  use, reproduction,  and distribution of  the Work
      otherwise complies with the conditions stated in this License.

   5.   Submission  of  Contributions.  Unless  You  explicitly  state
      otherwise,   any   Contribution  intentionally   submitted   for
      inclusion in the Work by You  to the Licensor shall be under the
      terms  and conditions  of this  License, without  any additional
      terms or conditions.  Notwithstanding  the above, nothing herein
      shall  supersede or  modify the  terms of  any separate  license
      agreement  you may  have executed  with Licensor  regarding such
      Contributions.

   6. Trademarks.  This  License does not grant permission  to use the
      trade names, trademarks, service marks,  or product names of the
      Licensor, except as required for reasonable and customary use in
      describing the origin of the Work and reproducing the content of
      the NOTICE file.

   7. Disclaimer  of Warranty.  Unless  required by applicable  law or
      agreed  to in  writing,  Licensor provides  the  Work (and  each
      Contributor provides  its Contributions) on an  \"AS IS\" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF  ANY KIND, either express or
      implied,  including,  without   limitation,  any  warranties  or
      conditions  of  TITLE,   NON-INFRINGEMENT,  MERCHANTABILITY,  or
      FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for
      determining the  appropriateness of using or  redistributing the
      Work  and assume  any  risks associated  with  Your exercise  of
      permissions under this License.

   8. Limitation of Liability. In no  event and under no legal theory,
      whether in tort (including  negligence), contract, or otherwise,
      unless  required  by  applicable  law (such  as  deliberate  and
      grossly  negligent acts)  or  agreed to  in  writing, shall  any
      Contributor be liable to You  for damages, including any direct,
      indirect, special,  incidental, or consequential damages  of any
      character arising as a result of  this License or out of the use
      or  inability to  use the  Work  (including but  not limited  to
      damages for loss of goodwill, work stoppage, computer failure or
      malfunction, or any and all other commercial damages or losses),
      even if such Contributor has  been advised of the possibility of
      such damages.

   9. Accepting Warranty or Additional Liability. While redistributing
      the Work or  Derivative Works thereof, You may  choose to offer,
      and  charge   a  fee  for,  acceptance   of  support,  warranty,
      indemnity,   or  other   liability  obligations   and/or  rights
      consistent  with  this  License.   However,  in  accepting  such
      obligations, You  may act only  on Your  own behalf and  on Your
      sole responsibility, not on behalf of any other Contributor, and
      only  if  You   agree  to  indemnify,  defend,   and  hold  each
      Contributor harmless  for any  liability incurred by,  or claims
      asserted against,  such Contributor by reason  of your accepting
      any such warranty or additional liability.

   END OF TERMS AND CONDITIONS

   APPENDIX: How to apply the Apache License to your work.

      To apply the  Apache License to your work,  attach the following
      boilerplate notice, with the  fields enclosed by brackets \"[]\"
      replaced with your own  identifying information.  (Don't include
      the brackets!)  The  text should be enclosed  in the appropriate
      comment syntax  for the  file format. We  also recommend  that a
      file or class name and description of purpose be included on the
      same  \"printed  page\"  as  the  copyright  notice  for  easier
      identification within third-party archives.

   Copyright [yyyy] [name of copyright owner]

   Licensed under  the Apache License, Version  2.0 (the \"License\");
   you may  not use this file  except in compliance with  the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an \"AS IS\" BASIS,
   WITHOUT WARRANTIES  OR CONDITIONS  OF ANY  KIND, either  express or
   implied.   See  the License  for  the  specific language  governing
   permissions and limitations under the License.")

;;; Paredit mode stuff.
(add-hook 'clojure-mode-hook #'paredit-mode)
(add-hook 'lisp-mode-hook #'paredit-mode)
(add-hook 'emacs-lisp-mode-hook #'paredit-mode)

;;; And rainbow delimiters.
(add-hook 'clojure-mode-hook #'rainbow-delimiters-mode)
(add-hook 'lisp-mode-hook #'rainbow-delimiters-mode)
(add-hook 'emacs-lisp-mode-hook #'rainbow-delimiters-mode)

;;; Helm setup, for nicer menus.
(require 'helm)
(require 'helm-config)

(global-set-key (kbd "M-x") 'helm-M-x)
;; The default "C-x c" is quite close to "C-x C-c", which quits Emacs.
;; Changed to "C-c h". Note: We must set "C-c h" globally, because we
;; cannot change `helm-command-prefix-key' once `helm-config' is loaded.
(global-set-key (kbd "C-c C-h") 'helm-command-prefix)
(global-unset-key (kbd "C-x c"))
(define-key helm-map (kbd "<tab>") 'helm-execute-persistent-action) ; rebind tab to run persistent action
(define-key helm-map (kbd "C-i") 'helm-execute-persistent-action) ; make TAB works in terminal
(define-key helm-map (kbd "C-z")  'helm-select-action) ; list actions using C-z

(when (executable-find "curl")
  (setq helm-google-suggest-use-curl-p t))

(setq helm-split-window-in-side-p           t ; open helm buffer inside current window, not occupy whole other window
      helm-move-to-line-cycle-in-source     t ; move to end or beginning of source when reaching top or bottom of source.
      helm-ff-search-library-in-sexp        t ; search for library in `require' and `declare-function' sexp.
      helm-scroll-amount                    8 ; scroll 8 lines other window using M-<next>/M-<prior>
      helm-ff-file-name-history-use-recentf t)

(helm-mode 1)

;;; Org-mode stuff
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-cb" 'org-iswitchb)
(global-set-key "\C-ct" 'ansi-term)

(global-set-key (kbd "<f12>") 'org-agenda)

;; Org-capture
(setq org-capture-templates
  '(    ;; ... other templates can be added here:
    ("j" "Journal Entry"
      entry (file+datetree "~/org/journal.org")
      "* %?"
      :empty-lines 0)
    ("n" "Generic Note"
     entry (file+datetree "~/org/notes.org")
     "* %? :note:"
     :empty-lines 0)
    ("a" "Assignment"
     entry (file+datetree "~/org/assignments.org")
     "* TODO %? :assignments:"
     :empty-lines 0)
    ("o" "Other to-do"
     entry (file+datetree "~/org/other-todo.org")
     "* TODO %?"
     :empty-lines 0)
    ("l" "Codex Entry - Link"
     entry (file+headline "~/org/codex.org" "Links")
     "* %? :link:"
     :empty-lines 0)
    ("a" "Codex Entry - E-mail Address"
     entry (file+headline "~/org/codex.org" "E-mail Addresses")
     "* %? :email:"
     :empty-lines 0)
     ("u" "Codex Entry - Quote"
     entry (file+headline "~/org/codex.org" "Quotes")
     "* %? :quote:"
     :empty-lines 0)
     ("t" "Codex Entry - TeX"
     entry (file+headline "~/org/codex.org" "TeX")
     "* %? :TeX:"
     :empty-lines 0)
     ("l" "Codex Entry - Lisp"
     entry (file+headline "~/org/codex.org" "Lisp")
     "* %? :League:"
     :empty-lines 0)
    ("e" "Event"
     entry (file+datetree "~/org/events.org")
     "* %? :event:"
     :empty-lines 0)
    ("m" "Mail"
     entry (file+datetree "~/org/e-mails.org")
     "* TODO %^{Title}\n\n Source: %u, %c\n\n %i"
     :empty-lines 1)))

;;; Emacs org-mode support for blogging with Jekyll.
;;;
;;; To use, just put this file somewhere in your emacs load path and
;;; (require 'org-jekyll)
;;;
;;; An article showing its use can be found at:
;;;    - http://www.gorgnegre.com/linux/using-emacs-orgmode-to-blog-with-jekyll.html
;;;
;;; Adapted from
;;;    - http://orgmode.org/worg/org-tutorials/org-jekyll.html
;;;    - https://github.com/metajack/jekyll/blob/master/emacs/jekyll.el
;;;
;;; Gorg Negre 2012-07-05

(provide 'org-jekyll)

;; Define our org project to be exported. Run "M-x org-export X mvm" to
;; export.
(setq org-publish-project-alist
      '(

   ("org-mvm"
          :base-directory "~/org/org-jekyll/" ;; Path to your org files.
          :base-extension "org"
          :publishing-directory "/home/edt/code/ruby-web/jekyll-projects/haumea11.github.io/" ;; Path to your Jekyll project.
          :recursive t
          :publishing-function org-publish-org-to-html
          :headline-levels 6
          :html-extension "html"
          :body-only t ;; Only export section between &lt;body&gt; &lt;/body&gt; tags
          :section-numbers nil
          :table-of-contents nil

          :author "Your Name"
          :email "user@example.cat"
    )

    ("org-static-mvm"
          :base-directory "~/org/org-jekyll/"
          :base-extension "css\\|js\\|png\\|jpg\\|ico\\|gif\\|pdf\\|mp3\\|flac\\|ogg\\|swf\\|php\\|markdown\\|md\\|html\\|htm\\|sh\\|xml\\|gz\\|bz2\\|vcf\\|zip\\|txt\\|tex\\|otf\\|ttf\\|eot\\|rb\\|yml\\|htaccess\\|gitignore"
          :publishing-directory "~/org-jekyll/rootdir/"
          :recursive t
          :publishing-function org-publish-attachment)

    ("mvm" :components ("org-mvm" "org-static-mvm"))

))

;; Improve our blogging experience with Org-Jekyll. This code sets four
;; functions with corresponding key bindings:
;;
;; C-c j n - Create new draft
;; C-c j P - Post current draft
;; C-c j d - Show all drafts
;; C-c j p - Show all posts
;;
;; Once a draft has been posted (i.e., moved from the _drafts
;; directory to _post with the required date prefix in the filename), we
;; then need to html-export it to the jekyll rootdir (with org-publish).

 (global-set-key (kbd "C-c j n") 'jekyll-draft-post)
 (global-set-key (kbd "C-c j P") 'jekyll-publish-post)
 (global-set-key (kbd "C-c j p") (lambda ()
    (interactive)
    (find-file "~/org/org-jekyll/_posts/")))
 (global-set-key (kbd "C-c j d") (lambda ()
    (interactive)
    (find-file "~/org/org-jekyll/_drafts/")))

(defvar jekyll-directory "~/org/org-jekyll/"
  "Path to Jekyll blog.")
(defvar jekyll-drafts-dir "_drafts/"
  "Relative path to drafts directory.")
(defvar jekyll-posts-dir "_posts/"
  "Relative path to posts directory.")
(defvar jekyll-post-ext ".org"
  "File extension of Jekyll posts.")
(defvar jekyll-post-template
  "#+STARTUP: showall\n#+STARTUP: hidestars\n#+OPTIONS: H:2 num:nil tags:nil toc:1 timestamps:t\n#+BEGIN_HTML\n---\nlayout: post\ntitle: %s\nexcerpt: \ncategories:\n  -  \ntags:\n  -  \npublished: false\n---\n#+END_HTML\n\n** "
  "Default template for Jekyll posts. %s will be replace by the post title.")

(defun jekyll-make-slug (s)
  "Turn a string into a slug."
  (replace-regexp-in-string
   " " "-" (downcase
            (replace-regexp-in-string
             "[^A-Za-z0-9 ]" "" s))))

(defun jekyll-yaml-escape (s)
  "Escape a string for YAML."
  (if (or (string-match ":" s)
          (string-match "\"" s))
      (concat "\"" (replace-regexp-in-string "\"" "\\\\\"" s) "\"")
    s))

(defun jekyll-draft-post (title)
  "Create a new Jekyll blog post."
  (interactive "sPost Title: ")
  (let ((draft-file (concat jekyll-directory jekyll-drafts-dir
                            (jekyll-make-slug title)
                            jekyll-post-ext)))
    (if (file-exists-p draft-file)
        (find-file draft-file)
      (find-file draft-file)
      (insert (format jekyll-post-template (jekyll-yaml-escape title))))))

(defun jekyll-publish-post ()
  "Move a draft post to the posts directory, and rename it so that it
contains the date."
  (interactive)
  (cond
   ((not (equal
          (file-name-directory (buffer-file-name (current-buffer)))
          (concat jekyll-directory jekyll-drafts-dir)))
    (message "This is not a draft post.")
    (insert (file-name-directory (buffer-file-name (current-buffer))) "\n"
            (concat jekyll-directory jekyll-drafts-dir)))
   ((buffer-modified-p)
    (message "Can't publish post; buffer has modifications."))
   (t
    (let ((filename
           (concat jekyll-directory jekyll-posts-dir
                   (format-time-string "%Y-%m-%d-")
                   (file-name-nondirectory
                    (buffer-file-name (current-buffer)))))
          (old-point (point)))
      (rename-file (buffer-file-name (current-buffer))
                   filename)
      (kill-buffer nil)
      (find-file filename)
      (set-window-point (selected-window) old-point)))))
